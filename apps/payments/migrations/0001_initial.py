# Generated by Django 4.2.7 on 2025-09-09 17:53

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orders', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('payment_reference', models.CharField(db_index=True, max_length=50, unique=True)),
                ('payment_method', models.CharField(choices=[('mtn_momo', 'MTN Mobile Money'), ('orange_money', 'Orange Money'), ('wallet', 'Wallet Balance'), ('cash', 'Cash Payment')], max_length=20)),
                ('transaction_type', models.CharField(choices=[('order_payment', 'Order Payment'), ('wallet_topup', 'Wallet Top-up'), ('refund', 'Refund')], default='order_payment', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('currency', models.CharField(default='XAF', max_length=3)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('phone_number', models.CharField(blank=True, help_text='Phone number for mobile money payment', max_length=17, validators=[django.core.validators.RegexValidator(message='Phone number must be in Cameroon format', regex='^\\+?237?[2368]\\d{7,8}$')])),
                ('transaction_id', models.CharField(blank=True, db_index=True, max_length=100)),
                ('external_reference', models.CharField(blank=True, max_length=100)),
                ('provider_response', models.JSONField(blank=True, default=dict)),
                ('transaction_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('net_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('failure_reason', models.TextField(blank=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='orders.order')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'db_table': 'payments_payment',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('mtn_momo', 'MTN Mobile Money'), ('orange_money', 'Orange Money')], max_length=20, unique=True)),
                ('display_name', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('api_endpoint', models.URLField()),
                ('api_key', models.CharField(blank=True, max_length=255)),
                ('secret_key', models.CharField(blank=True, max_length=255)),
                ('merchant_id', models.CharField(blank=True, max_length=100)),
                ('fee_percentage', models.DecimalField(decimal_places=4, default=0, max_digits=5)),
                ('minimum_fee', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('maximum_fee', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('min_amount', models.DecimalField(decimal_places=2, default=100, max_digits=10)),
                ('max_amount', models.DecimalField(decimal_places=2, default=500000, max_digits=10)),
                ('daily_limit', models.DecimalField(decimal_places=2, default=2000000, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Payment Provider',
                'verbose_name_plural': 'Payment Providers',
                'db_table': 'payments_provider',
            },
        ),
        migrations.CreateModel(
            name='PaymentWebhook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(max_length=20)),
                ('webhook_data', models.JSONField()),
                ('processed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='webhooks', to='payments.payment')),
            ],
            options={
                'verbose_name': 'Payment Webhook',
                'verbose_name_plural': 'Payment Webhooks',
                'db_table': 'payments_webhook',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WalletTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('credit', 'Credit'), ('debit', 'Debit')], max_length=10)),
                ('source', models.CharField(choices=[('topup', 'Wallet Top-up'), ('order_payment', 'Order Payment'), ('refund', 'Refund'), ('bonus', 'Bonus Credit'), ('admin_adjustment', 'Admin Adjustment')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('balance_before', models.DecimalField(decimal_places=2, max_digits=10)),
                ('balance_after', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.CharField(max_length=255)),
                ('reference', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wallet_adjustments', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wallet_transactions', to='orders.order')),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wallet_transactions', to='payments.payment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wallet_transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Wallet Transaction',
                'verbose_name_plural': 'Wallet Transactions',
                'db_table': 'payments_wallet_transaction',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', '-created_at'], name='payments_wa_user_id_d1f41b_idx'), models.Index(fields=['-created_at'], name='payments_wa_created_f5d04a_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['-created_at'], name='payments_pa_created_3147e3_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['status'], name='payments_pa_status_7ad4af_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['payment_method'], name='payments_pa_payment_5c92d7_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['user', '-created_at'], name='payments_pa_user_id_7a85fd_idx'),
        ),
    ]
